// commands/addcoins.js
const { SlashCommandBuilder, PermissionFlagsBits } = require("discord.js");
const fs = require("fs");

const USERS_FILE = "./users.json";

// ===== Helpers =====
function loadUsers() {
    if (!fs.existsSync(USERS_FILE)) return {};
    try {
        return JSON.parse(fs.readFileSync(USERS_FILE));
    } catch (err) {
        console.error("‚ö†Ô∏è L·ªói ƒë·ªçc users.json:", err);
        return {};
    }
}

function saveUsers(users) {
    fs.writeFileSync(USERS_FILE, JSON.stringify(users, null, 2));
}

// ===== Command =====
module.exports = {
    data: new SlashCommandBuilder()
        .setName("addcoins")
        .setDescription("üí∞ Admin: Th√™m xu cho ng∆∞·ªùi d√πng")
        .addUserOption(option =>
            option.setName("user")
                .setDescription("Ng∆∞·ªùi d√πng c·∫ßn c·ªông xu")
                .setRequired(true)
        )
        .addIntegerOption(option =>
            option.setName("amount")
                .setDescription("S·ªë xu c·∫ßn th√™m")
                .setRequired(true)
        )
        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator), // Ch·ªâ admin c√≥ quy·ªÅn

    async execute(interaction) {
        const targetUser = interaction.options.getUser("user");
        const amount = interaction.options.getInteger("amount");

        // Ki·ªÉm tra s·ªë xu h·ª£p l·ªá
        if (amount <= 0) {
            return interaction.reply({
                content: "‚ö†Ô∏è S·ªë xu ph·∫£i l·ªõn h∆°n 0!",
                ephemeral: true
            });
        }

        const users = loadUsers();

        // N·∫øu ch∆∞a c√≥ t√†i kho·∫£n, kh·ªüi t·∫°o
        if (!users[targetUser.id]) {
            users[targetUser.id] = {
                coins: 1000, // m·∫∑c ƒë·ªãnh 1000 xu khi m·ªõi tham gia
                wins: 0,
                losses: 0,
                earnings: 0
            };
        }

        // C·ªông xu
        users[targetUser.id].coins += amount;

        saveUsers(users);

        // G·ª≠i th√¥ng b√°o
        await interaction.reply({
            content: `‚úÖ ƒê√£ c·ªông **${amount} xu** cho **${targetUser.username}**!\nüí∞ S·ªë d∆∞ m·ªõi: **${users[targetUser.id].coins} xu**`,
            ephemeral: false // hi·ªán c√¥ng khai ƒë·ªÉ minh b·∫°ch
        });
    },
};